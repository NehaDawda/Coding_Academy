package com.jp.hr.daos;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import com.jp.hr.entities.Employee;
import com.jp.hr.entities.Product;
import com.jp.hr.exceptions.HrException;
import com.jp.hr.utilities.ConnectionFactory;
import com.jp.hr.utilities.JPAUtil;

public class DaoProductImpl implements DaoProduct{
	private EntityManager entityManager;
	
	public DaoProductImpl() throws HrException{
		entityManager = JPAUtil.getEntityManager();
	}
	
	@Override
	public List<Product> getProductList() throws HrException {
		Query query = entityManager.createQuery("from PRODUCT");
		List<Product> productList = query.getResultList();
		return productList;
	}

	@Override
	public Product getProductDetails(int productId) throws HrException {
		return entityManager.find(Product.class, productId);
	}

	@Override
	public boolean insertNewProduct(Product p) throws HrException {
		entityManager.persist(p);
		return p.getProductId();
	}

	@Override
	public boolean updateProduct(Product p) throws HrException {
		String qry = "update Product set name=?,category=?,price=? where id=?";
		Connection connect = null;
		PreparedStatement pstmt = null;
		
		try {
			connect = factory.getConnection();
			pstmt = connect.prepareStatement(qry);
			pstmt.setInt(4, p.getProductId());
			pstmt.setString(1, p.getProductName());
			pstmt.setString(2, p.getProductCategory());
			pstmt.setDouble(3, p.getProductPrice());
			
			int recInserted = pstmt.executeUpdate();
			
			return recInserted == 1 ? true : false;
			
		} catch (SQLException e) {
			throw new HrException("Problem in fetching.",e);
		} finally {
			try {
				if(pstmt != null){
					pstmt.close();
				}
			//	factory.closeConnection();
			} catch (SQLException e) {
				throw new HrException("Problem in closing resources.", e);
			}
		}
	}

	@Override
	public boolean deleteProduct(int productId) throws HrException {
		String qry = "delete from Product where id=?";
		Connection connect = null;
		PreparedStatement pstmt = null;
		
		try {
			connect = factory.getConnection();
			pstmt = connect.prepareStatement(qry);
			pstmt.setInt(1, productId);
			
			int recInserted = pstmt.executeUpdate();
			
			return recInserted == 1 ? true : false;
			
		} catch (SQLException e) {
			throw new HrException("Problem in fetching.",e);
		} finally {
			try {
				if(pstmt != null){
					pstmt.close();
				}
				//factory.closeConnection();
			} catch (SQLException e) {
				throw new HrException("Problem in closing resources.", e);
			}
		}
	}
	
	@Override
	protected void finalize() throws Throwable {
		factory.closeConnection();
		super.finalize();
	}
}
