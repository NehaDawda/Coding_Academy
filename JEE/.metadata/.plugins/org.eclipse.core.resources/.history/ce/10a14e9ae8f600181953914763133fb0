package com.jp.shopping.servlets;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.jp.hr.entities.Employee;
import com.jp.hr.entities.Product;
import com.jp.hr.exceptions.HrException;
import com.jp.shopping.exception.ShoppingException;
import com.jp.shopping.services.ServiceItem;
import com.jp.shopping.services.ServiceItemImpl;
import com.jp.shopping.services.ServiceOrder;
import com.jp.shopping.services.ServiceOrderImpl;

@WebServlet("/frontController")
public class FrontController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private ServiceItem serviceItem;
	private ServiceOrder serviceOrder;
	
	@Override
	public void init() throws ServletException {
		try {
			serviceItem = new ServiceItemImpl();
			serviceOrder = new ServiceOrderImpl();
		} catch (ShoppingException e) {
			throw new ServletException("Init method failed",e);
		}
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String command = getCommand(request.getRequestURI());
		RequestDispatcher dispatch = null;
		String jspName = null;
		String preFix = "/WEB-INF/jsps/";
		String postFix = ".jsp";
		
		try {
			switch(command){
				case "*":
				case "mainMenu":{
								jspName = "MainMenu";
								break;
				}
				case "itemList":{
								ArrayList<Employee> empList = services.getEmpList();
								request.setAttribute("empList", empList);
								jspName = "EmpList";
								
								break;
				}
				case "itemDetails":{
								String idStr = request.getParameter("id"); // empDetails.do?id=x
								int empId = Integer.parseInt(idStr);
								Employee emp = services.getEmpDetails(empId);
								request.setAttribute("empDetails", emp);
								jspName = "EmpDetails";
								break;
				}
				case "submitProduct" :{
					String productIdStr = request.getParameter("productId");
					String productName = request.getParameter("productName");
					String productCategory = request.getParameter("productCategory");
					String productPriceStr = request.getParameter("productPrice");
					
					int productId = Integer.parseInt(productIdStr);
					double productPrice = Double.parseDouble(productPriceStr);
					
					Product product = new Product(productId, productName, productCategory,productPrice);
					boolean isSuccessful = productService.addNewProduct(product);
					String msg = isSuccessful ? "Product Inserted" : "Insertion Failed";
					request.setAttribute("message", msg);
					jspName = "NewProduct";
					break;
				}
				case "newProduct":{
					jspName = "NewProduct";
					break;
				}
				case "updateProductDetails" :{
					String productIdStr = request.getParameter("id");
					int productId = Integer.parseInt(productIdStr);
					
					Product product = productService.getProductDetails(productId);
					
					request.setAttribute("product", product);
					jspName = "UpdateProduct";
					break;
				}
				case "updateProduct" :{
					String productIdStr = request.getParameter("productId");
					System.out.println(productIdStr);
					String productName = request.getParameter("productName");
					String productCategory = request.getParameter("productCategory");
					String productPriceStr = request.getParameter("productPrice");
					
					int productId = Integer.parseInt(productIdStr);
					double productPrice = Double.parseDouble(productPriceStr);
					
					Product product = new Product(productId, productName, productCategory,productPrice);
					boolean isSuccessful = productService.updateProductDetails(product);
					String msg = isSuccessful ? "Product Updated" : "Updation Failed";
					request.setAttribute("message", msg);
					request.setAttribute("productDetails", product);
					jspName = "ProductDetails";
					break;
				}
			}
		} catch (ShoppingException e) { 	
			System.out.println(e.getMessage());
			//jspName = "Errors";
			//request.setAttribute("exception", e);
			//request.setAttribute("msg", e.getMessage());
			//throw new ServletException(e.getMessage());
		}
		
		dispatch = request.getRequestDispatcher(preFix + jspName + postFix);
		dispatch.forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}
	
	private String getCommand(String uri){
		int leftPosi = uri.lastIndexOf("/");
		int rightPosi = uri.lastIndexOf(".");
		
		if(rightPosi <= leftPosi ){
			return "home";
		}
		else{
			return uri.substring(leftPosi+1, rightPosi);
		}	
	}
}
